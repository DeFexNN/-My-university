int main () {
int a, suma = 0, count = 0;
double avg;
printf_s("a="); scanf_s("%d", &a);
for (; a!=0; ){
printf_s("a="); scanf_s("%d", &a);
}
printf_s("a=", &a); scanf_s("%d", &a);
for(; a ;){
suma+=a;count++;
printf_s("a="); scanf_s("%d", &a);
}
if(count!=0) av9=1.0*suma/count;
else av9=0;
printf_s("–°–µ—Ä–µ–¥–Ω—î –∞—Ä–∏—Ñ %lf", avg);
return 0;
}

//–ó–∞–¥–∞—á–∞ 2 –Ω—É –≤–∏ –∑–∞–ø–∏—à—ñ—Ç—å
int main () {
int a, suma = 0, count = 0;
double avg;
printf_s("a="); scanf_s("%d", &a);
while(a!=0){
printf_s("a="); scanf_s("%d", &a);
}
printf_s("a="); scanf_s("%d", &a);
while(a){
suma+=a;
count++;
printf_s("a="); scanf_s("%d",&a);
}
if(count!=0) avg = 1.0 * suma/count; else avg = 0;
printf_s(" avg= %lf", avg);
return 0;
}


//–ü–∏—Ç–∞–Ω—å –Ω–µ–º–∞—î –ø–∏—à–µ–º do while
//–ú–∏ –π–æ–≥–æ –≤—á–∏–ª–∏? –ó–∞—Ä–∞–∑ –±—É–¥–µ–º –≤—á–∏—Ç–∏ü•∏

int main () {
int a, suma = 0, count = 0;
double avg;
do {
printf_s("a=");scanf_s("%d", &a);
}while (a!=0);
do{
printf_s("a=");scanf_s("%d",&a);
suma+=a; count++;
}while(a);
count--;
}
if(count!=0)avg = 1.0 * suma / count;
else avg = 0;
printf_s("avg=%lf",avg);
return 0;
}

//continue 
//–ù–∞–π—Ç–∏ —Å—É–º—É –Ω–µ–ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ 1 –¥–æ 10
int main() {
int s=0;
for (int i=1; i<= 10; i++){
if (i%2==0) continue;
s+=i;
}
return 0;
}

//–ú–∞—Å–∏–≤–∏üòà
//–ú–∞—Å–∏–≤–∏ —Ü–µ –Ω–∞–±—ñ—Ä –æ–¥–Ω–æ—Ç–∏–ø–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —è–∫—ñ –∑–∞–π–º–∞—é—Ç—å –Ω–µ–ø—Ä–µ—Ä–∏–≤–Ω—É –æ–±–ª–∞—Å—Ç—å –≤ –ø–∞–º'—è—Ç—ñ –º–∞—à–∏–Ω–∏
//–ù–µ–¥–æ–ª—ñ–∫ –º–∞—Å–∏–≤—ñ–≤ —Ç–µ —â–æ —Ç–∏ –º–∞—î—à –∑–Ω–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä –º–∞—Å–∏–≤—É
//–ú–∞—Å–∏–≤ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—î—Ç—å—Å—è —ñ–º—è –º–∞—Å–∏–≤—É(–π–æ–≥–æ –º—ñ–Ω—è—Ç–∏ –Ω–µ–º–æ–Ω–∞ —ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–æ–∂–µ) —ñ–º—è –º–∞—Å–∏–≤—É —ñ –∞–¥—Ä–µ—Å–∞ –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ –ø–∞–º'—è—Ç—ñ —ñ —â–µ –µ–ª–µ–º–µ–Ω—Ç–æ–º
–ï–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—î—Ç—å—Å—è:
//–¢–∏–ø–æ–º
//–ù–æ–º–µ—Ä–æ–º(—ñ–Ω–¥–µ–∫—Å)–ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è —Å—Ç—Ä–æ–≥–æ –∑ –Ω—É–ª—è
//–ê–¥—Ä–µ—Å–∞ 
q‚Üí‚Üì
A a[0] a[1] a[2]
–Ø–∫—â–æ —ñ–Ω—Ç —Ç–æ q+4 —è–∫—â–æ –¥–∞–±–ª —Ç–æ q+8 —Ü–µ —è–∫ –ø–æ–∑–Ω–∞—á–∞—Ç–∏ –¥—Ä—É–≥–∏–π –µ–ª–µ–º–µ–Ω—Ç

//–ü—Ä–∏–∫–ª–∞–¥ –Ω–∞–π—Ç–∏ —Å—É–º—É –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É
//–ü—Ä–∏–∂–∞–ª –∫ —Å—Ç–µ–Ω–µüò±üòèü•µ
//–Ü–º—è —Ç–∏–ø_–µ–ª [—Ä–æ–∑–º—ñ—Ä] —Ü–µ –ø—Ä–æ –º–∞—Å–∏–≤
int main () {
int mas[N], suma = 0;
for ( int i = 0; i < N; i++) mas [i] = rand()%100;
for ( int i = 0; i < N; i++) suma+=mas[i];
printf_s("suma = %d; suma);
return 0;
}


–ù–∞–π—Ç–∏ —Ä—ñ–∑–Ω–∏—Ü—é –º—ñ–∂ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–º —ñ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º –µ–ª–µ–º–µ–Ω—Ç–æ–º
int main() {
mas [N], r ,  min , max;
for (int i = 0; i<N; i++) mas [i]=rand()%100;
min = max = mas[0];
for ( int i = 1; i < N; i++) {
if(mas[i] < min) min = mas[i];
if (max < mas[i]) max=mas[i];
}
printf_s("–†—ñ–∑–Ω–∏—Ü—è=%d",max - min);
return 0;
}

